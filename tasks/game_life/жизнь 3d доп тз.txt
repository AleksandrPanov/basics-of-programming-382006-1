Задание может долго считаться! Имеет смысл запустить в Release!

int radius; // радиус проверки, граница включена
проверить значения от 1 до 2 включительно

int loneliness; // с этого числа и меньше клетки умирают от одиночества
проверить значения от 0 до 25 включительно

int birth_start; // с этого числа и до birth_end появляется живая клетка
проверить значения от loneliness + 1 до 26 включительно

int birth_end;
проверить значения от birth_start до 26 включительно

int overpopulation; // с этого числа и дальше клетки погибают от перенаселения
проверить значения от birth_end + 1 до 27 включительно
    
Необходимо запустить игру на 20 итераций (поле 4x4x4) с разными параметрами. После выполнения игры проверить:
1. При данных параметрах доля живых клеток больше 0.15 и меньше 0.2?
2. Если выполнено условие один, вывести значения параметров radius, ..., overpopulation
3. Порядок перебора параметров: параметры перебераются от min к max. radius перебирается в "самом внешем цикле",
overpopulation в "самом внутреннем цикле".

Оцень сложность работы алгоритма по поиску необходимых параметров, при размере поля N^3.
Сколько секунд у вас занял подсчёт при N = 4? Сколько может занять расчёт при N = 100 (оценить теоритически)?

Поле 1:
0:
####
####
####
####

1:
####
####
####
####

2:
##.#
.###
####
####

3:
####
####
#.##
####

Ответ, который должен получиться:
1 0 13 15 26
1 1 13 15 26
1 2 13 15 26
1 3 13 15 26
1 7 11 18 26
1 7 11 19 26
1 7 11 20 26
1 7 11 21 26
1 7 11 22 26
1 7 11 23 26
1 7 11 24 26


Поле 2:
0:
......
......
......
......
......

1:
......
......
......
......
....#.

2:
......
......
...#..
......
...#..

3:
......
......
......
......
......

4:
......
......
......
......
......

Ответ, который должен получиться:
1 0 1 1 9
1 0 1 1 11
1 0 1 2 9
1 0 1 7 10
1 0 1 8 11
1 0 2 2 3
1 1 2 2 9
1 1 2 2 10
1 1 2 3 6
1 1 2 5 6
1 1 2 5 8
1 1 3 6 9
1 2 3 13 14
1 2 3 13 15
1 2 3 14 15
1 2 3 14 17
2 0 1 1 27